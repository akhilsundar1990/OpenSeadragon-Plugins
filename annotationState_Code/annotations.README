Files:
drawing_functions.js #  deperecated drawing code before I moved to the annotations.js framework
                     #uses a simple DIV based method to add overlays
                    
annotation.js  # new framework to store/load and bind annotations and overlays to openseadragon canvas



/* HOW TO USE annotation.js with openseadragon  */


<script type="text/javascript" src="annotation.js">



/*the annotation.js creates something called annotationState which is the local instantiation */
/* AnnotationState is the main object, and then I create an instance of this which is also connected to the
OpenSeadragon viewer object */

//var annotationState = new AnnotationState(); ## this is called within annotation.js


/* now initialize the OpenSeaDragon viewer and then the annotation state object... */
function init() {
                viewer = new OpenSeadragon.Viewer("container");
		//the viewer in this case is also the div the viewer is living
		annotationState.setSeadragonViewer(viewer);
		}




my_square = { type:'rect', points: [ pt1,pt2], label: 'rich rocks'}



aperio_object_list = new Array();

 $('Annotation',aperioxml_annotation).each( function () 
   {
     annotation_type =  this.getAttribute('Type');
//alert(annotation_type);
    $('Region',this).each(  function()  {
   var region_name = this.getAttribute('Id');
 
       
 var pt_array = new Array();
  dzi_x_pixels = viewer.viewport.contentSize.x;   
   dzi_y_pixels = viewer.viewport.contentSize.y  ;


    var row = new OpenSeadragon.Point();
       
      $('Vertex', this).each(function(){
       row.x = (this.getAttribute("X")/( dzi_x_pixels)  );
	row.y = (this.getAttribute("Y")/( dzi_y_pixels)   ) /2;
 pt_data.push(row);
    });
       point_list = pt_data;
       var roi_object = { type: 'freehand', points: pt_data, id: region_name, label: region_name, color: "#FF00FF" }
aperio_object_list.push(roi_object);    
  })
  });
  
  var pt1 = new OpenSeadragon.Point(0.4,0.8);
  var pt2 = new OpenSeadragon.Point(0.2,0.5);
  
  
  
  var square_example = { type: 'rect', points: [pt1,pt2], label: 'square1' }
  
  aperio_object_list.push(square_example)
  
